---
import Navbar from "./Navbar.astro";
import Footer from "./Footer.astro";

import SideNavigation from "../component/SideNavigation.astro";

const navMenuItems = [
    {
        title: "GitHub",
        url: "https://github.com/ekqt/astro-mdx",
    },
];

const footerMenuItems = [
    {
        label: "Twitter: @_ekqt",
        href: "https://hectorsosa.me/twitter",
    },
    {
        label: "hello@hectorsosa.me",
        href: "https://hectorsosa.me/email",
    },
    {
        label: "(420)6089-84789",
        href: "https://hectorsosa.me/telegram",
    },
];

export interface Props {
    title?: string;
    keywords?: string;
    description?: string;
    baseUrl?: string;
    path?: string;
    image?: string;
}

const defaultProps = {
    title: "Astro + Mdx",
    keywords: "Astro, MDX, TailwindCSS",
    description: "Built with Astro, MDX and TailwindCSS",
    baseUrl: "https://astromdx.vercel.app",
    path: "/",
    image: "/home.png",
};

const {
    title = defaultProps.title,
    keywords = defaultProps.keywords,
    description = defaultProps.description,
    baseUrl = defaultProps.baseUrl,
    path = defaultProps.path,
    image = defaultProps.image,
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="generator" content={Astro.generator} />

        {/* Primary Meta Tags */}
        <title>{title}</title>
        <meta name="title" content={title} />
        <meta name="description" content={description} />
        <meta name="keywords" content={keywords} />
        <link rel="icon" href="/favicon.svg" />

        {/* Open Graph - Facebook */}
        <meta property="og:type" content="website" />
        <meta property="og:url" content={`${baseUrl + path}`} />
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:image" content={image} />

        {/* Twitter*/}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={`${baseUrl + path}`} />
        <meta property="twitter:title" content={title} />
        <meta property="twitter:description" content={description} />
        <meta property="twitter:image" content={image} />
    </head>
    <body>
        <Navbar items={navMenuItems} />
        <main class="flex mx-auto min-h-[50rem] max-w-6xl px-6 py-12">
            <SideNavigation />
            <div class="ml-4">
                <slot />
            </div>
        </main>
        <Footer items={footerMenuItems} />
        <style is:global>
            html,
            body {
                padding: 0;
                margin: 0;
                font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
                    Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans,
                    Helvetica Neue, sans-serif;
                @apply bg-slate-50 text-slate-900 transition-colors dark:bg-slate-900 dark:text-slate-50;
            }

            a {
                color: inherit;
                text-decoration: none;
            }

            * {
                scroll-behavior: smooth;
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
                -webkit-font-smoothing: antialiased;
                text-rendering: optimizeLegibility;
            }

            input[type="text"] {
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                outline: none;
            }

            /** Inline code */
            .prose p > code,
            .prose li > code {
                @apply rounded bg-gray-200 p-1 font-normal dark:bg-gray-800;
            }

            /** Codeblocks */

            .prose > pre {
                @apply rounded-xl py-6 px-6 text-sm md:py-8 md:text-base;
            }

            code[class*="language-"],
            pre[class*="language-"] {
                text-align: left;
                white-space: pre;
                word-spacing: normal;
                word-break: normal;
                word-wrap: normal;
                font-size: 1em;
                line-height: 1.5em;

                -moz-tab-size: 4;
                -o-tab-size: 4;
                tab-size: 4;

                -webkit-hyphens: none;
                -moz-hyphens: none;
                -ms-hyphens: none;
                hyphens: none;
            }

            .token.atrule {
                color: #c792ea;
            }

            .token.attr {
                color: #ffcb6b;
            }

            .token.attr-value {
                color: #a5e844;
            }

            .token.attribute {
                color: #a5e844;
            }

            .token.boolean {
                color: #c792ea;
            }

            .token.builtin {
                color: #ffcb6b;
            }

            .token.cdata {
                color: #80cbc4;
            }

            .token.char {
                color: #80cbc4;
            }

            .token.class {
                color: #ffcb6b;
            }

            .token.class-name {
                color: #f2ff00;
            }

            .token.comment {
                color: #616161;
            }

            .token.constant {
                color: #c792ea;
            }

            .token.deleted {
                color: #ff6666;
            }

            .token.doctype {
                color: #616161;
            }

            .token.entity {
                color: #ff6666;
            }

            .token.function {
                color: #c792ea;
            }

            .token.hexcode {
                color: #f2ff00;
            }

            .token.id {
                color: #c792ea;
                font-weight: bold;
            }

            .token.important {
                color: #c792ea;
                font-weight: bold;
            }

            .token.inserted {
                color: #80cbc4;
            }

            .token.keyword {
                color: #c792ea;
            }

            .token.number {
                color: #fd9170;
            }

            .token.operator {
                color: #89ddff;
            }

            .token.prolog {
                color: #616161;
            }

            .token.property {
                color: #80cbc4;
            }

            .token.pseudo-class {
                color: #a5e844;
            }

            .token.pseudo-element {
                color: #a5e844;
            }

            .token.punctuation {
                color: #89ddff;
            }

            .token.regex {
                color: #f2ff00;
            }

            .token.selector {
                color: #ff6666;
            }

            .token.string {
                color: #a5e844;
            }

            .token.symbol {
                color: #c792ea;
            }

            .token.tag {
                color: #ff6666;
            }

            .token.unit {
                color: #fd9170;
            }

            .token.url {
                color: #ff6666;
            }

            .token.variable {
                color: #ff6666;
            }
        </style>
    </body>
</html>
